#!/usr/bin/env nodejs
var path = require('path');
var url = require('url');
var threaded_http = require('./threaded_http.js');

var argv = process.argv;
var urlSrc = argv[2];
var nThreads = argv[3] ? argv[3] : 32;
var md5sum = argv[4];
var isRetry = argv[5] === '-r'? true : false;
var pathDst = path.basename(url.parse(urlSrc).pathname);

var hrs = threaded_http.hrs;
var StopWatch = threaded_http.StopWatch; 
var print = threaded_http.print;
var sw = new StopWatch();

threaded_http.threadedGet(urlSrc, pathDst, nThreads, md5sum, isRetry,
    function (th) { 
        th.on('thread_data', function (i, chunk) {
            print.lp("[INFO] File: '%s', Size: %s, Finished: %d%, Speed: %s", th.destPath, hrs(th.size), parseInt(th.sizeGot * 100 / th.size), hrs(th.sizeGot/sw.stop('second')));
        }).on('thread_error', function (i, errCode) {
            console.log("[ERROR] Thread %d, error code: %s", i, errCode);
        }).on('thread_end', function (i) {
            console.log("[INFO] file '%s' download thread %d completed", th.destPath, i);
        }).on('error', function (i) {
            console.log("[ERROR] file '%s' download failed, restarting...", th.destPath);
        }).on('end', function () {
            console.log("[INFO] file '%s' download completed", th.destPath);
            process.exit(0);
        });
    }
);

     
