#!/usr/bin/nodejs

var cp = require('child_process');
var fs = require('fs');

if (process.getuid() != 0) {
    console.log("[ERROR] Please run this program as 'root'!");
    process.exit(1);
}

if (process.argv.length == 2) {
    process.exit(0);
}

var argv = process.argv;
var cmd = {};
var isCmdToken = false;
for (var i = 2; i < argv.length; ++ i) {
    if (argv[i] === 'dist-upgrade') {
        cmd.cmd = 'dist-upgrade';
    }
    else if (argv[i] === 'install') {
        cmd.cmd = 'install';
        isCmdToken = true;
    }
    else if (argv[i][0] === '-') {
        cmd.options.push(argv[i]);
        isCmdToken = false; 
    }
    else {
        if (isCmdToken) { 
           cmd.args.push(argv[i]);
        }
        else {
            console.log("[ERROR] wrong command arguments");
            process.exit(1);
        }
    }
}
if (cmd.cmd == 'install' && cmd.options.length == 0) {
    console.log("[ERROR] wrong 'install' command arguments");
    process.exit(1);
}
    

aptgetPrinturis(cmd);

function aptgetPrinturis (cmd) {
    var pkgs = []; 

    var cmdargs = [];
    if (cmd.cmd === 'install') {
        cmdargs = ['install'];
        cmdargs.concat(cmd.options);
    }
    else if (cmd.cmd === 'dist-upgrade') {
        cmdargs = ['dist-upgrade'];
    }
    else {
        invokeAptget();
        process.exit(0);
    }
    cmdargs.push('-qq', '--print-uris');

    var procAptgetPrinturis = cp.spawn('apt-get', cmdargs, {stdio: [process.stdin, 'pipe', process.stderr]});
    var stdout = '';

    procAptgetPrinturis.stdout.on('data', function (data) {
        stdout += data.toString();
    });

    procAptgetPrinturis.on('exit', function (code, signal) {
        if (!signal) {
            if (code) {
                console.log('[ERROR] exit: ' + code);
                return code;
            }
            else {
                stdout.split('\n').forEach(function (e) {
                    if (!e) return;
                    var token = e.split(' '); 
                    //console.log("[DEBUG] token=" + token);
                    pkgs.push({
                        uri:  token[0].slice(1, -1),
                        file: token[1],
                        size: parseInt(token[2]),
                        md5:  token[3].split(':')[1]
                    }); 
                });
                //console.log("[DEBUG] " + pkgs.length);
                if (pkgs.length) {
                    removeOldFiles(pkgs);
                }
                else {
                    invokeAptget();
                }
            }
        }
    });
}

function removeOldFiles (pkgs) {
    var i;
    console.log("[INFO] Removing the follwing package files:");
    pkgs.forEach(function (e) {
        var filePath = '/var/cache/apt/archives/' + e.file; 
        if (fs.existsSync(filePath)) {
            fs.unlink(filePath, function (err) {
                if (err) console.log("[ERROR] " + err);
            });
            console.log("[INFO]     " + e.file);
        }
    });
    download(pkgs, pkgs.length - 1);
}



function download (pkgs, i) {
    var nDownload = (pkgs[i].size / 100000 + 1).toFixed();
    if (nDownload > 64) nDownload = 64;
    var cmdLine = ['-o', pkgs[i].file, '-n', nDownload.toString(), pkgs[i].uri];
    console.log("[INFO] " + "Downloading package... '" + "axel " + cmdLine.join(' ') + "'");
    var procDownload = cp.spawn('axel', cmdLine, {cwd: '/var/cache/apt/archives', stdio: 'inherit'});
    //var logLine = '';
    //procDownload.stdout.on('data', function (data) {
    //    var s = data.toString();
    //    var n = s.lastIndexOf('\n');
    //    // Print what prior to a new-line
    //    if (n != -1) {
    //        logLine += s.slice(0, n);
    //        console.log(logLine);
    //        logLine = s.slice(n + 1); // '' if s[-1] === '\n'
    //    }
    //    else {
    //        logLine += s;
    //    }
    //});
    //procDownload.stderr.on('data', function (data) {
    //    console.log("[ERROR][axel] "+ data.toString());
    //});
    procDownload.on('exit', function (code, signal) {
        if (!signal) { // program exits normally
            if (code) { // w/ error, re-download it
                download(pkgs, i);
            }
            else { // w/o error
                // check the md5sum
                var md5File = pkgs[i].md5 + ' *' + pkgs[i].file;
                var procVerifyFiles = cp.spawn('md5sum', ['-c', '--status'], {cwd: '/var/cache/apt/archives', stdio: ['pipe', 'ignore', process.stderr]});
                procVerifyFiles.stdin.write(md5File);
                procVerifyFiles.stdin.end();
                procVerifyFiles.on('exit', function (code, signal) {
                    if (!signal) { // program exits normally
                        if (code) { // w/ error, re-download it
                            console.log("[ERROR] " + "md5sum verification failed for '" + md5File + "'");
                            //remove the bad one
                            var filePath = '/var/cache/apt/archives/' + pkgs[i].file; 
                            if (fs.existSync(filePath)) {
                                fs.unlink(filePath, function (err) {
                                    if (err) console.log("[ERROR] " + err);
                                });
                            }
                            download(pkgs, i);
                        }
                        else { // md5sum succeeded
                            console.log("[INFO] " + "md5sum verification succeeded for '" + pkgs[i].file + "'");
                            if (i != 0) { // Download next
                                download(pkgs, i - 1);
                            }
                            else { // all download succeed, run the apt-get command
                                console.log("[INFO] All downloaded packages are verified successfully! Now install it!");
                                invokeAptget();
                            }
                        }
                    }
                });
            }
        }
    });
}

function invokeAptget () {
    var procAptget = cp.spawn('apt-get', process.argv.slice(2), {stdio: 'inherit'});
};



